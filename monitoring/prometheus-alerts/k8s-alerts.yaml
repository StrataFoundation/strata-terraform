groups:
  - name: k8s-alerts
    rules:
      - alert: KubernetesPodCrashLoopBackOff
        expr: increase(kube_pod_container_status_restarts_total[5m]) > 3
        for: 1m
        labels:
          severity: critical
        annotations:
          title: KubernetesPodCrashLoopBackOff
          account: '{{ $labels.account }}'
          instance: '{{ $labels.instance }}'
          pod: '{{ $labels.pod }}'
          container: '{{ $labels.container }}'
          description: "Pod `{{ $labels.pod }}` is in `CrashLoopBackOff`"
      - alert: KubernetesPodImagePullBackOff
        expr: kube_pod_container_status_waiting_reason{reason="ImagePullBackOff"}
        for: 2m
        labels:
          severity: critical
        annotations:
          title: KubernetesPodImagePullBackOff
          account: '{{ $labels.account }}'
          instance: '{{ $labels.instance }}'
          pod: '{{ $labels.pod }}'
          container: '{{ $labels.container }}'
          description: "Pod `{{ $labels.pod }}` is in `ImagePullBackOff`"
      - alert: KubernetesPodNotHealthy
        expr: sum by (namespace, pod, account, instance, container) (kube_pod_status_phase{phase=~"Pending|Unknown|Failed"}) > 0
        for: 15m
        labels:
          severity: critical
        annotations:
          title: KubernetesPodNotHealthy
          account: '{{ $labels.account }}'
          instance: '{{ $labels.instance }}'
          pod: '{{ $labels.pod }}'
          container: '{{ $labels.container }}'
          description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} has been in a non-running state for longer than 15 minutes."
      - alert: KubernetesContainerCpuUsage
        expr: (sum(rate(container_cpu_usage_seconds_total{name!="",account!="poc-data-prod"}[3m])) BY (account, instance, pod, container) * 100) > 80
        for: 2m
        labels:
          severity: warning
        annotations:
          title: KubernetesContainerCpuUsage
          account: '{{ $labels.account }}'
          instance: '{{ $labels.instance }}'
          pod: '{{ $labels.pod }}'
          container: '{{ $labels.container }}'
          description: "Container CPU usage is above 80%\n  VALUE = {{ $value }}\n"
      - alert: KubernetesContainerMemoryUsage
        expr: (sum(container_memory_working_set_bytes{name!="",account!="poc-data-prod"}) BY (account, instance, pod, container) / sum(container_spec_memory_limit_bytes > 0) BY (account, instance, pod, container) * 100) > 80
        for: 2m
        labels:
          severity: warning
        annotations:
          title: KubernetesContainerMemoryUsage
          account: '{{ $labels.account }}'
          instance: '{{ $labels.instance }}'
          pod: '{{ $labels.pod }}'
          container: '{{ $labels.container }}'
          description: "Container Memory usage is above 80%\n  VALUE = {{ $value }}"
      - alert: KubernetesContainerVolumeUsage
        expr: (1 - (sum(container_fs_inodes_free{name!=""}) BY (account, instance, pod, container) / sum(container_fs_inodes_total) BY (account, instance, pod, container))) * 100 > 80
        for: 2m
        labels:
          severity: warning
        annotations:
          title: KubernetesContainerVolumeUsage
          account: '{{ $labels.account }}'
          instance: '{{ $labels.instance }}'
          pod: '{{ $labels.pod }}'
          container: '{{ $labels.container }}'
          description: "Container Volume usage is above 80%\n  VALUE = {{ $value }}"
      - alert: KubernetesContainerHighThrottleRate
        expr: rate(container_cpu_cfs_throttled_seconds_total[3m]) > 1
        for: 2m
        labels:
          severity: warning
        annotations:
          title: KubernetesContainerHighThrottleRate
          account: '{{ $labels.account }}'
          instance: '{{ $labels.instance }}'
          pod: '{{ $labels.pod }}'
          container: '{{ $labels.container }}'
          description: "Container is being throttled"
      - alert: KubernetesMemoryPressure
        expr: kube_node_status_condition{condition="MemoryPressure",status="true",account!="poc-data-prod"} == 1
        for: 2m
        labels:
          severity: critical
        annotations:
          title: KubernetesMemoryPressure
          account: '{{ $labels.account }}'
          instance: '{{ $labels.instance }}'
          pod: '{{ $labels.pod }}'
          container: '{{ $labels.container }}'
          description: "{{ $labels.node }} has MemoryPressure condition"
      - alert: KubernetesDiskPressure
        expr: kube_node_status_condition{condition="DiskPressure",status="true"} == 1
        for: 2m
        labels:
          severity: critical
        annotations:
          title: KubernetesDiskPressure
          account: '{{ $labels.account }}'
          instance: '{{ $labels.instance }}'
          pod: '{{ $labels.pod }}'
          container: '{{ $labels.container }}'
          description: "{{ $labels.node }} has DiskPressure condition"
      - alert: KubrnetesNetworkUnavailable
        expr: kube_node_status_condition{condition="NetworkUnavailable",status="true"} == 1
        for: 2m
        labels:
          severity: critical
        annotations:
          title: KubernetesNetworkUnavailable
          account: '{{ $labels.account }}'
          instance: '{{ $labels.instance }}'
          pod: '{{ $labels.pod }}'
          container: '{{ $labels.container }}'
          description: "{{ $labels.node }} has NetworkUnavailable condition"
      - alert: KubernetesOutOfCapacity
        expr: sum by (node) ((kube_pod_status_phase{phase="Running"} == 1) + on(uid) group_left(node) (0 * kube_pod_info{pod_template_hash=""})) / sum by (node) (kube_node_status_allocatable{resource="pods"}) * 100 > 90
        for: 2m
        labels:
          severity: warning
        annotations:
          title: KubernetesOutOfCapacity
          account: '{{ $labels.account }}'
          instance: '{{ $labels.instance }}'
          pod: '{{ $labels.pod }}'
          container: '{{ $labels.container }}'
          description: "{{ $labels.node }} is out of capacity"
      - alert: KubernetesContainerOomKiller
        expr: (kube_pod_container_status_restarts_total{account!="poc-data-prod"} - kube_pod_container_status_restarts_total{account!="poc-data-prod"} offset 10m >= 1) and ignoring (reason) min_over_time(kube_pod_container_status_last_terminated_reason{reason="OOMKilled"}[10m]) == 1
        for: 0m
        labels:
          severity: warning
        annotations:
          title: KubernetesContainerOomKiller
          account: '{{ $labels.account }}'
          instance: '{{ $labels.instance }}'
          pod: '{{ $labels.pod }}'
          container: '{{ $labels.container }}'
          description: "Container {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }} has been OOMKilled {{ $value }} times in the last 10 minutes."
      - alert: KubernetesPersistentvolumeclaimPending
        expr: kube_persistentvolumeclaim_status_phase{phase="Pending"} == 1
        for: 2m
        labels:
          severity: warning
        annotations:
          title: KubernetesPersistentvolumeclaimPending
          account: '{{ $labels.account }}'
          description: "PersistentVolumeClaim {{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }} is pending."
      - alert: KubernetesVolumeOutOfDiskSpace
        expr: kubelet_volume_stats_available_bytes / kubelet_volume_stats_capacity_bytes * 100 < 10
        for: 2m
        labels:
          severity: warning
        annotations:
          title: KubernetesVolumeOutOfDiskSpace
          account: '{{ $labels.account }}'
          instance: '{{ $labels.instance }}'
          pod: '{{ $labels.pod }}'
          container: '{{ $labels.container }}'
          description: "Volume is almost full (< 10% left)\n  VALUE = {{ $value }}"
      - alert: KubernetesVolumeFullInFourDays
        expr: predict_linear(kubelet_volume_stats_available_bytes[6h], 4 * 24 * 3600) < 0
        for: 0m
        labels:
          severity: critical
        annotations:
          title: KubernetesVolumeFullInFourDays
          account: '{{ $labels.account }}'
          instance: '{{ $labels.instance }}'
          pod: '{{ $labels.pod }}'
          container: '{{ $labels.container }}'
          description: "{{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }} is expected to fill up within four days. Currently {{ $value | humanize }}% is available."
      - alert: KubernetesPersistentvolumeError
        expr: kube_persistentvolume_status_phase{phase=~"Failed|Pending", job="kube-state-metrics"} > 0
        for: 0m
        labels:
          severity: critical
        annotations:
          title: KubernetesPersistentvolumeError
          account: '{{ $labels.account }}'
          instance: '{{ $labels.instance }}'
          pod: '{{ $labels.pod }}'
          container: '{{ $labels.container }}'
          description: "Persistent volume is in bad state."
      - alert: KubernetesHpaScalingAbility
        expr: kube_horizontalpodautoscaler_status_condition{status="false", condition="AbleToScale"} == 1
        for: 2m
        labels:
          severity: warning
        annotations:
          title: KubernetesHpaScalingAbility
          account: '{{ $labels.account }}'
          instance: '{{ $labels.instance }}'
          pod: '{{ $labels.pod }}'
          container: '{{ $labels.container }}'
          description: "Pod is unable to scale."
      - alert: KubernetesHpaMetricAvailability
        expr: kube_horizontalpodautoscaler_status_condition{status="false", condition="ScalingActive"} == 1
        for: 5m
        labels:
          severity: warning
        annotations:
          title: KubernetesHpaMetricAvailability
          account: '{{ $labels.account }}'
          instance: '{{ $labels.instance }}'
          pod: '{{ $labels.pod }}'
          container: '{{ $labels.container }}'
          description: "HPA is not able to collect metrics."
      - alert: KubernetesHpaScaleCapability
        expr: kube_horizontalpodautoscaler_status_desired_replicas >= kube_horizontalpodautoscaler_spec_max_replicas
        for: 2m
        labels:
          severity: info
        annotations:
          title: KubernetesHpaScaleCapability
          account: '{{ $labels.account }}'
          instance: '{{ $labels.instance }}'
          pod: '{{ $labels.pod }}'
          container: '{{ $labels.container }}'
          description: "The maximum number of desired Pods has been hit."
      - alert: KubernetesHpaUnderutilized
        expr: max(quantile_over_time(0.5, kube_horizontalpodautoscaler_status_desired_replicas[1d]) == kube_horizontalpodautoscaler_spec_min_replicas) by (account, horizontalpodautoscaler) > 3
        for: 0m
        labels:
          severity: info
        annotations:
          title: KubernetesHpaUnderutilized
          account: '{{ $labels.account }}'
          description: "HPA `{{ $labels.horizontalpodautoscaler }}` is constantly at minimum replicas for 50% of the time. Potential cost saving here."
